---- sample Tables ---------------------------------
create table dev.StgEmployees(
EmployeeId int  primary key,
EmployeeFirstName nvarchar(max),
EmployeeLastName nvarchar(max),
DOB nvarchar(max),
Gender nvarchar(max),
City nvarchar(max)
);

select * from dev.StgEmployees;

create table dev.DimEmployees(
EmployeeKey int identity(1,1) primary key,
EmployeeId int,
EmployeeFirstName nvarchar(max),
EmployeeLastName nvarchar(max),
DOB nvarchar(max),
Gender nvarchar(max),
City nvarchar(max),
EffStartDate datetime default getdate(),
EffEndDate datetime default null
);

insert into Dev.StgEmployees (EmployeeId,EmployeeFirstName, EmployeeLastName, DOB, Gender, City)
values (101,'lokeswar', 'valluru', '29-12-1998', 'M', 'Proddatur'),
(102,'Manikantha', 'Badireddy', '31-12-1998', 'M', 'Kakinada'),
(103, 'Priyanka', 'Banoth', '02-10-1996', 'F', 'Khamam');

--- -------------------------------------- Final -------------------------------------------------------------------

merge into dev.DimEmployees t

using (

	select EmployeeId as join_key, * from dev.StgEmployees 

	union all 

	select null as Join_key , stg.* from dev.StgEmployees stg join dev.DimEmployees b on b.EmployeeId = stg.EmployeeId and b.EmployeeLastName != stg.EmployeeLastName

)b 
on t.EmployeeId = b.join_key 
when matched and b.EmployeeLastName != t.EmployeeLastName then
update set t.EffEndDate = getdate()
when not matched then Insert (EmployeeId, EmployeeFirstName, EmployeeLastName, DOB, Gender, City, EffStartDate, EffEndDate) values 
(EmployeeId, EmployeeFirstName, EmployeeLastName, DOB, Gender, City, getdate(), null);
-- -------------------------- with Merge it works well and good ------------------------------------------------------

SELECT stg.EmployeeId, stg.EmployeeFirstName, stg.EmployeeLastName, stg.DOB, stg.Gender, stg.City
    FROM dev.StgEmployees stg
    WHERE NOT EXISTS (
       
        SELECT 1
        FROM dev.DimEmployees d
        WHERE d.EmployeeId = stg.EmployeeId
        AND d.EmployeeLastName = stg.EmployeeLastName
        AND d.City = stg.City
        AND d.EffEndDate = cast('9999-12-31' as date)
    )

-- this code tells you : 
/*
selects records from the dev.StgEmployees staging table with the condition that there are no corresponding records in the dev.DimEmployees dimension table that 
match on several criteria: EmployeeId, EmployeeLastName, and City, and where the EffEndDate is NULL. The NULL in EffEndDate typically signifies that a record is currently active or valid 
where not exists filter out records which are not mathces with dim from stg

*/

-- --------------------------------------------------------------------------------------------------------
MERGE INTO dev.DimEmployees AS target
USING (

    SELECT stg.EmployeeId, stg.EmployeeFirstName, stg.EmployeeLastName, stg.DOB, stg.Gender, stg.City
    FROM dev.StgEmployees stg
    WHERE NOT EXISTS (
   
        SELECT 1
        FROM dev.DimEmployees d
        WHERE d.EmployeeId = stg.EmployeeId
        AND d.EmployeeLastName = stg.EmployeeLastName
        AND d.City = stg.City
        AND d.EffEndDate IS NULL
    )
) AS source (EmployeeId, EmployeeFirstName, EmployeeLastName, DOB, Gender, City)
ON target.EmployeeId = source.EmployeeId AND target.EffEndDate IS NULL
WHEN MATCHED THEN
    UPDATE SET EffEndDate = GETDATE() 
WHEN NOT MATCHED THEN
    INSERT (EmployeeId, EmployeeFirstName, EmployeeLastName, DOB, Gender, City, EffStartDate, EffEndDate)
    VALUES (source.EmployeeId, source.EmployeeFirstName, source.EmployeeLastName, source.DOB, source.Gender, source.City, GETDATE(), null);



-- ------------------------------------------------------------------------------------------------------------------------
create table dev.TControlSCD(
Id int identity(1,1) primary key,
LoadType nvarchar(max),
SourceTableName nvarchar(max),
SourceColumnName nvarchar(max),
IsLogicalColumn nvarchar(max),
IsAutoGeneration nvarchar(max),
TargetTableName nvarchar(max),
TargetColumnName nvarchar(max),
isScdColumn nvarchar(max),
DefaultExpression nvarchar(max),
CreatedAt datetime DEFAULT getDate()
);


-- -----------------------------------Insert data into TControlSCD Table ---------------------------------------------
insert into Dev.TControlSCD(LoadType, SourceTableName, SourceColumnName,IsLogicalColumn,IsAutoGeneration ,TargetTableName, TargetColumnName,isScdColumn, DefaultExpression)
values 
('SCD2', '', '', '', 'Y','dev.DimEmployees', 'EmployeeKey', '', ''),
('SCD2', 'dev.StgEmployees', 'EmployeeId', 'Y', '','dev.DimEmployees', 'EmployeeId', '', ''),
('SCD2', 'dev.StgEmployees', 'EmployeeFirstName', '', '', 'dev.DimEmployees', 'EmployeeFirstName', '',''),
('SCD2', 'dev.StgEmployees', 'EmployeeLastName', '', '', 'dev.DimEmployees', 'EmployeeLastName', 'Y',''),
('SCD2', 'dev.StgEmployees', 'DOB', '', '', 'dev.DimEmployees', 'DOB', '', ''),
('SCD2', 'dev.StgEmployees', 'Gender', '', '', 'dev.DimEmployees', 'Gender', '', ''),
('SCD2', 'dev.StgEmployees', 'City', '', '', 'dev.DimEmployees', 'City', 'Y', ''),
('SCD2', '', '', '', '', 'dev.DimEmployees', 'EffStartDate', '', convert(date,GETDATE())),
('SCD2', '', '', '', '', 'dev.DimEmployees', 'EffEndDate', '', convert(date,GETDATE()))

====================================================== SCD2 IMplementation =====================================================================

Generaly, SCD2 follows like if any record updated at source side that records has to inserted with new surogate key in the Dim Table and old record effendDate has to 
change to the date of Record Updated


============================================================ sample SCD2 WITH OUT GENERIC WAY =================================================================

-- first it's check for Updates then Insert follows. Assuming that LastName and City are SCD2 columns...

UPDATE a
SET EffEndDate = GETDATE()
FROM dev.DimEmployees a
INNER JOIN dev.StgEmployees b ON a.EmployeeId = b.EmployeeId
WHERE NOT (a.EmployeeLastName = b.EmployeeLastName AND a.City = b.City)
    AND a.EffEndDate = cast('9999/12/31 00:00:00' as  Date);


insert into dev.DimEmployees (EmployeeId, EmployeeFirstName, EmployeeLastName, DOB, Gender, City, EffEndDate)
select EmployeeId, EmployeeFirstName, EmployeeLastName , DOB, Gender, City, cast('9999/12/31 00:00:00' as  Date)
from dev.StgEmployees as s 
where not exists (select 1 from Dev.DimEmployees t where t.EmployeeId = s.EmployeeId and t.EffEndDate =cast('9999/12/31 00:00:00' as  Date)
and (t.EmployeeLastName = s.EmployeeLastName and t.City = s.City))


=========================================================================== NOW IN GENERIC WAY ========================================================================

Generic way is nothing but we have to define scd2 columns in a table called (TControlSCD) and use that table values or data. So that any changes required in future just come and 
update this table then it will adjust that code . In the Query just pass the TableName and IsDerived column

-------------------- Update Query --------------------------------------

Declare @final_stmt Nvarchar(max);

with t as 
(select * from dev.TControlSCD where TargetTableName = 'dev.DimEmployees'),

tgt_cols as (select * from t where IsAutoGeneration != 'Y'),
tgt_cols_list as (select STRING_AGG(TargetTableName, ',') as ins_cols from tgt_cols),
srctable as (select distinct SourceTableName from t where SourceTableName != ''),
src_cols as (select * from t where SourceColumnName!= ''),
src_cols_list as (select STRING_AGG(SourceTableName +'.'+ SourceColumnName, ', ') +' ,' + ''''+CONVERT(varchar, GETDATE(),20) + ''''+ ', CAST(''9999/12/31 00:00:00'' AS DATE)' as ins_src_cols
from src_cols),

tgt_table as (select distinct TargetTableName from t ),
src_qry as (select  SourceTableName, SourceTableName+'.'+SourceColumnName as cols from t where SourceColumnName != ''),
src_cols_insert as (select STRING_AGG(SourceColumnName, ',') + ' ,' + ''''+CONVERT(varchar, GETDATE(),20) + ''''+ ', CAST(''9999/12/31 00:00:00'' AS DATE)' as ins_src_colsinsert from src_cols ),
src_list as (select 'Select ' + STRING_AGG(cols, ',') + ' From' + SourceTableName as srccols from src_qry group by SourceTableName),
scd_columns as (select distinct TargetTableName +'.'+ TargetColumnName +'= x. '+ SourceColumnName as scd_cols from t where isScdColumn = 'Y'),
scd_list as (select String_agg(scd_cols, ' AND ') as scd_cols from scd_columns),
logic_cols as ( SELECT TargetTableName + '.' + TargetColumnName + '=x.' + SourceColumnName as logic_col  
    FROM t
    WHERE IsLogicalColumn = 'Y'),
logic_list as (select STRING_AGG(logic_col,' AND ') as logic_col from logic_cols),
final_stmt as (
select + 'Update ' + tgt_table.TargetTableName +
' set EffEndDate = '+ '''' + convert(varchar, getdate(), 20) +''''+
'From ' + tgt_table.TargetTableName +
' Inner join ' + srctable.SourceTableName + ' x on ' + logic_list.logic_col +
' where not ('+ scd_list.scd_cols +')' +
' and EffEndDate = CAST(''9999/12/31 00:00:00'' AS DATE); ' as update_qry
from tgt_table, srctable, logic_list, scd_list
)
-- select * from final_stmt;
select @final_stmt = update_qry from final_stmt

-- select @final_stmt;

EXECUTE sp_executesql @final_stmt;
-- -------------------------------- Outputs ------------------------

for ins_src_cols o/p:
dev.StgEmployees.EmployeeId, dev.StgEmployees.EmployeeFirstName, dev.StgEmployees.EmployeeLastName, dev.StgEmployees.DOB, dev.StgEmployees.Gender, dev.StgEmployees.City , '2024-01-17 10:05:48', CAST('9999/12/31 00:00:00' AS DATE)

for src_qry
SourceTableName	        cols
dev.StgEmployees	dev.StgEmployees.EmployeeId
dev.StgEmployees	dev.StgEmployees.EmployeeFirstName
dev.StgEmployees	dev.StgEmployees.EmployeeLastName
dev.StgEmployees	dev.StgEmployees.DOB
dev.StgEmployees	dev.StgEmployees.Gender
dev.StgEmployees	dev.StgEmployees.City

for src_list
dev.StgEmployees.EmployeeId, dev.StgEmployees.EmployeeFirstName, dev.StgEmployees.EmployeeLastName .......................

for scd_columns

for scd_cols
dev.DimEmployees.City= x. City
dev.DimEmployees.EmployeeLastName= x. EmployeeLastName

for scd_list
scd_cols
dev.DimEmployees.City= x. City AND dev.DimEmployees.EmployeeLastName= x. EmployeeLastName

for logic_col
logic_col
dev.DimEmployees.EmployeeId = x.EmployeeId
----------------------------------- Insert Query -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Declare @final_stmt  nvarchar(max);

with t as (select * from dev.TControlSCD where TargetTableName = 'dev.DimEmployees'),
tgt_table as (select distinct TargetTableName from t),
tgt_cols as (select * from t where IsAutoGeneration != 'Y'),
tgt_cols_list as (select STRING_AGG(TargetColumnName, ',') as ins_cols from tgt_cols),
srctable as (select distinct SourceTableName from t),
src_cols as (select * from t where SourceColumnName != ''),
src_cols_list as (select STRING_AGG(SourceTableName + ' . ' + SourceColumnName, ',') + ' ,' + ''''+CONVERT(varchar, GETDATE(),20) + ''''+ ', CAST(''9999/12/31 00:00:00'' AS DATE)' as ins_src_cols from src_cols),
src_cols_insert_list as (select STRING_AGG(SourceColumnName, ',')+ ' ,' + ''''+CONVERT(varchar, GETDATE(),20) + ''''+ ', CAST(''9999/12/31 00:00:00'' AS DATE)' as ins_src_cols_insert from src_cols ),
src_qry as (select  SourceTableName, SourceTableName+'.'+SourceColumnName as cols from t where SourceColumnName != ''),
src_list as (select 'select ' + STRING_AGG(cols, ',') + ' From ' + SourceTableName as srccols from src_qry group by SourceTableName),
scd_columns as (select distinct TargetTableName+'.'+TargetColumnName +' = x.'+SourceColumnName as scd_cols from t where isScdColumn = 'Y'),
scd_list as (select STRING_AGG(scd_cols, ' AND ') as scd_cols from scd_columns),
logic_cols as (select distinct TargetTableName+ '. '+TargetColumnName+ ' = x.' + sourceColumnName as logic_col from t where IsLogicalColumn = 'Y'),
logic_col_list as (select STRING_AGG(logic_col, 'AND') as logic_col from logic_cols),
final_Stmt as ( select 'Insert into ' + tgt_table.TargetTableName + '(' + tgt_cols_list.ins_cols +')' +
					   ' select ' + src_cols_insert_list.ins_src_cols_insert + ' from ' + srctable.SourceTableName +' x ' +
					   ' where not exists  (' +
					   '    select 1 from ' + tgt_table.TargetTableName + 
					   '    where EffEndDate = CAST(''9999/12/31 00:00:00'' AS DATE)' +
					   '    and (' + logic_col_list.logic_col + ')' +
					   '    and ('+ scd_list.scd_cols +') ' + ');' as insert_qry
					   from tgt_table, tgt_cols_list, src_cols_insert_list, srctable, logic_col_list, scd_list
)
-- select * from final_Stmt;
select @final_stmt = insert_qry from final_Stmt

-- select @final_stmt;

EXECUTE sp_executesql @final_stmt;

for src_col_list_insert o/p:
EmployeeId,EmployeeFirstName,EmployeeLastName,DOB,Gender,City ,'2024-01-17 10:19:25', CAST('9999/12/31 00:00:00' AS DATE)

==============================================================================================================================================================================

Execution Order First Run Update Query then Insert Query 

sample o/p of DimEmployees:

EmployeeKey	EmployeeId	EmployeeFirstName	EmployeeLastName	DOB		Gender	City			EffStartDate		EffEndDate
1		101		lokeswar		valluru			29-12-1998	M	Proddatur	2023-12-26 06:51:38.000		9999-12-31 00:00:00.000
2		102		Manikantha		Badireddy		31-12-1998	M	Kakinada	2023-12-26 06:51:38.000		9999-12-31 00:00:00.000
3		103		Priyanka		Dharawath		02-10-1996	F	Hyd		2023-12-26 06:51:38.000		9999-12-31 00:00:00.000
4		104		Shiba			bjdgfj			08-7-1999	M	jfdshgd		2023-12-26 06:51:38.000		2023-12-26 06:53:36.000
5		105		Harsha			VardhanHarsha		31-01-1999	M	klr		2023-12-26 06:51:38.000		9999-12-31 00:00:00.000
6		106		Rama			AdhiReddy		23-10-1996	M	Hyd		2023-12-26 06:51:38.000		9999-12-31 00:00:00.000
7		104		Shiba			Jena			08-7-1999	M	Hyderabad	2023-12-26 06:53:49.000		9999-12-31 00:00:00.000




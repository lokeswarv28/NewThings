{
	"count": 2,
	"value": [
		{
			"Id": 1,
			"SchemaName": "dev",
			"TableName": "Sales",
			"WaterMark": "2024-01-01T00:00:00Z",
			"IncrementalColumnName": "TransactionDate"
		},
		{
			"Id": 2,
			"SchemaName": "dev",
			"TableName": "OnlineTransactions",
			"WaterMark": "2024-01-01T00:00:00Z",
			"IncrementalColumnName": "DateOfTransaction"
		}
	],
	"effectiveIntegrationRuntime": "AutoResolveIntegrationRuntime (UK South)",
	"billingReference": {
		"activityType": "PipelineActivity",
		"billableDuration": [
			{
				"meterType": "AzureIR",
				"duration": 0.016666666666666666,
				"unit": "Hours"
			}
		],
		"totalBillableDuration": [
			{
				"meterType": "AzureIR",
				"duration": 0.016666666666666666,
				"unit": "Hours"
			}
		]
	},
	"durationInQueue": {
		"integrationRuntimeQueue": 0
	}
}


----- cda o/p -----------------------------------------------------------------------------
{
	"dataRead": 256,
	"dataWritten": 351,
	"filesWritten": 1,
	"sourcePeakConnections": 1,
	"sinkPeakConnections": 1,
	"rowsRead": 8,
	"rowsCopied": 8,
	"copyDuration": 10,
	"throughput": 0.128,
	"errors": [],
	"effectiveIntegrationRuntime": "AutoResolveIntegrationRuntime (UK South)",
	"usedDataIntegrationUnits": 4,
	"billingReference": {
		"activityType": "DataMovement",
		"billableDuration": [
			{
				"meterType": "AzureIR",
				"duration": 0.06666666666666667,
				"unit": "DIUHours"
			}
		],
		"totalBillableDuration": [
			{
				"meterType": "AzureIR",
				"duration": 0.06666666666666667,
				"unit": "DIUHours"
			}
		]
	},
	"usedParallelCopies": 1,
	"executionDetails": [
		{
			"source": {
				"type": "SqlServer"
			},
			"sink": {
				"type": "AzureBlobFS",
				"region": "UK South"
			},
			"status": "Succeeded",
			"start": "1/18/2024, 12:18:45 PM",
			"duration": 10,
			"usedDataIntegrationUnits": 4,
			"usedParallelCopies": 1,
			"profile": {
				"queue": {
					"status": "Completed",
					"duration": 6
				},
				"transfer": {
					"status": "Completed",
					"duration": 2,
					"details": {
						"readingFromSource": {
							"type": "SqlServer",
							"workingDuration": 0,
							"timeToFirstByte": 0
						},
						"writingToSink": {
							"type": "AzureBlobFS",
							"workingDuration": 0
						}
					}
				}
			},
			"detailedDurations": {
				"queuingDuration": 6,
				"timeToFirstByte": 0,
				"transferDuration": 2
			}
		}
	],
	"dataConsistencyVerification": {
		"VerificationResult": "NotVerified"
	},
	"durationInQueue": {
		"integrationRuntimeQueue": 0
	}
}


-- --------------------------------------------------------------------------------------------
@sink in CDA:

@concat('SELECT * FROM ', item().SchemaName, '.', item().TableName, ' WHERE ', item().IncrementalColumnName, ' >= CAST(''', item().WaterMark, ''' AS DATETIME)')


CREATE TABLE dev.Sales (
    Id INT  Identity (1,1) PRIMARY KEY,
    ProductName VARCHAR(255),
    Quantity INT,
    Amount DECIMAL(10, 2),
    TransactionDate DATE
);

-- Insert sample data
INSERT INTO dev.Sales (ProductName, Quantity, Amount, TransactionDate) VALUES
( 'Laptop', 2, 1500.00, '2024-01-16'),
( 'Smartphone', 5, 750.00, '2024-01-16'),
( 'Headphones', 3, 120.00, '2024-01-15'),
( 'Tablet', 1, 400.00, '2024-01-14'),
( 'Camera', 1, 800.00, '2024-01-13'),
( 'Printer', 2, 300.00, '2024-01-12'),
( 'Desk Chair', 4, 250.00, '2024-01-11'),
( 'Monitor', 1, 600.00, '2024-01-10'),
( 'External HDD', 3, 180.00, '2024-01-09'),
( 'Wireless Mouse', 2, 30.00, '2024-01-08'),
( 'Keyboard', 1, 50.00, '2024-01-07'),
( 'Backpack', 2, 70.00, '2024-01-06'),
( 'Desk Lamp', 1, 25.00, '2024-01-05'),
( 'Coffee Maker', 1, 100.00, '2024-01-04'),
( 'Smartwatch', 3, 180.00, '2024-01-03');

-- create one more table called Transactions

create table dev.OnlineTransactions (
TransactionId int identity,
TransactionAmount DECIMAL(10, 2),
DateOfTransaction Date

);


insert into dev.OnlineTransactions (TransactionAmount, DateOfTransaction) values 
( 600.00, '2024-01-10'),
(  180.00, '2024-01-09'),
(  30.00, '2024-01-08'),
(  50.00, '2024-01-07'),
(  70.00, '2024-01-06'),
(  25.00, '2024-01-05'),
(  100.00, '2024-01-04'),
(  180.00, '2024-01-03');

-- create config Table 

-- Drop table  dev.TConfigIncremental

create table dev.TConfigIncremental (
Id int identity,
SchemaName nvarchar(max),
TableName nvarchar(max),
WaterMark date,
IncrementalColumnName nvarchar(max)
);

insert into dev.TConfigIncremental (SchemaName, TableName, WaterMark, IncrementalColumnName) values 
('dev', 'Sales', '2024-01-01', 'TransactionDate');

select * from dev.Sales;

select * from dev.OnlineTransactions;

select * from dev.TConfigIncremental;

-- DROP PROCEDURE dev.UpdateWaterMark;

create procedure dev.UpdateWaterMark (
@SrcTableName nvarchar(max),
@IncrementalColumn nvarchar(max),
@tname nvarchar(max)
)
as 
Begin 

DECLARE @setMax nvarchar(max) = 'select @maxvalue = max(' + @IncrementalColumn + ') from ' + @SrcTableName;
Declare @MaxDate date ;

EXECUTE sp_executesql @setMax, N'@maxvalue date output', @maxvalue = @MaxDate output;

Update dev.TConfigIncremental
set WaterMark = @MaxDate

where TableName = @tname

end


--EXEC dev.UpdateWaterMark 
--    @SrcTableName = 'dev.OnlineTransactions', 
--    @IncrementalColumn = 'DateOfTransaction';


select * from dev.TConfigIncremental;


--DECLARE @tname VARCHAR(50) = 'dev.OnlineTransactions';
--DECLARE @col VARCHAR(50) = 'DateOfTransaction';
--Declare @t varchar(50) = 'OnlineTransactions'
--DECLARE @query NVARCHAR(MAX) = 'SELECT @maxvalue = MAX(' + @col + ') FROM ' + @tname;  
--DECLARE @result DATE;

--EXEC sp_executesql @query, N'@maxvalue DATE OUTPUT', @maxvalue = @result OUTPUT; 

--UPDATE dev.TConfigIncremental
--SET WaterMark = @result
--WHERE TableName = @t;



--select @result;

--SELECT SQL_VARIANT_PROPERTY(@result,'BaseType') BaseType


create table dev.LogsForIncremental (
LogId int identity(1,1),
DataFactoryName nvarchar(max),
PipelineName nvarchar(max),
SourceTableName nvarchar(max),
DestinationFolderName nvarchar(max),
TriggerTime datetime,
RowsRead int,
RowsCopied int,
CopyDuration int,
WaterMarkDateOfCopied nvarchar(max)
);


create procedure USPIncrementalLogs (
@DataFactoryName nvarchar(max),
@PipelineName nvarchar(max),
@SourceTableName nvarchar(max),
@DestinationFolderName nvarchar(max),
@TriggerTime datetime,
@RowsRead int,
@RowsCopied int,
@CopyDuration int,
@WaterMarkDateOfCopied nvarchar(max)

)

as
Begin
	Insert into dev.LogsForIncremental (DataFactoryName,PipelineName, SourceTableName, DestinationFolderName,TriggerTime,RowsRead,RowsCopied,CopyDuration,WaterMarkDateOfCopied)
	values (
		@DataFactoryName,
		@PipelineName,
		@SourceTableName,
		@DestinationFolderName,
		@TriggerTime,
		@RowsRead,
		@RowsCopied,
		@CopyDuration,
		@WaterMarkDateOfCopied	
	)

End;





